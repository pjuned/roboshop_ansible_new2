- name: shipping
  hosts: shipping
  become: yes
  vars:
    mysql_pwd: RoboShop@1
  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: maven
        state: present

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: Recursively remove existing directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create /app dir
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download shipping application code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name: extract the shipping application
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: daemon reload and start
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: install mysql client
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: check cities schema exist or not
      ansible.builtin.command: mysql -h mysql.aws76s.online -uroot -p{{mysql_pwd}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'" 
      register: schema

    - name: print output
      ansible.builtin.debug:
        msg: "schema_output: {{schema}}"

    # - name: Load cities data
    #   ansible.builtin.shell: "mysql -h mysql.aws76s.online -uroot -p{{mysql_pwd}} < /app/schema/shipping.sql"
    #   when: schema.stdout != "1"

    - name: install PyMySQL and cryptography 
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: pip3.9
      loop:
      - cryptography
      - PyMySQL

    - name: import data
      community.mysql.mysql_db:
        name: all
        login_user: root
        login_password: "{{ mysql_pwd }}"
        login_host: mysql.aws76s.online
        state: import
        target: "{{ item }}"
      loop:
      - /app/db/schema.sql
      - /app/db/app-user.sql
      - /app/db/master-data.sql

    - name: start and enable shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: yes
    



