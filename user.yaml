- name: user
  hosts: user
  become: yes
  tasks:
    - name: disable old nodejs and enable nodejs:20
      ansible.builtin.shell: dnf module disable nodejs -y; dnf module enable nodejs:20 -y
    
    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: Recursively remove existing directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create /app dir
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download user application code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp

    - name: extract the user application
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app
        remote_src: yes

    - name: install  dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy user service
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: daemon reload and start
      ansible.builtin.systemd_service:
        daemon_reload: true

  # lets start after the data is loaded

    - name: copy mongodb repo
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongodb.repo
    
    - name: install mongodb client
      ansible.builtin.package:
        name: mongodb-mongosh
        state: present

    - name: get the user count
      ansible.builtin.command: mongosh --host mongodb.aws76s.online -quiet --eval 'db=db.getSiblingDB("users"); db.users.estimatedDocumentCount()'
      register: user_count

    - name: print the user count
      ansible.builtin.debug:
        msg: "user count: {{user_count}}"

    - name: load user data
      ansible.builtin.command: mongosh --host mongodb.aws76s.online < /app/schema/user.js
      when: user_count.stdout == "0"

    - name: start and enable user
      ansible.builtin.service:
        name: user
        state: restarted
        enabled: yes
    


        